# yaml-language-server: $schema=./ScriptInfoSchema.json

---
# (Optional) Language of the script
Language: "c++"

# Each of the platform dependent settings can be listed under
# - All
# - Windows
# - Linux
# - MacOS
# - Unix

# (Optional) Preferred compiler/linker profiles for the script for each platform
RequiredProfiles: 
    Windows: ["g++"]
    Linux: ["g++"]
    MacOS: ["g++"]

# (Optional) Override the default compile flags for each platform
OverrideCompileFlags:
    # Target Platform
    All:
        # Profile with the respective flags to override
        "g++":
            # (Optional) Flags to be removed from the default compile flags, separated by space
            Remove: ""
            
            # (Optional) Additional flags to be appended to the default compile flags, separated by space
            Append: ""
    
        
# (Optional) Override the default link flags for each platform
OverrideLinkFlags:
    # Target Platform
    All:
        # Profile with the respective flags to override
        "g++":
            # (Optional) Flags to be removed from the default link flags, separated by space
            Remove: ""
            
            # (Optional) Additional flags to be appended to the default link flags, separated by space
            Append: ""

# (Optional) The list of dependencies needed by the script
Dependencies:
    # Dependency name
-   Name: MyLibrary
    
    # Supported platforms of the dependency
    Platforms: [Windows, Linux, MacOS]
    
    # The source of getting the dependency (Git, Local)
    Source:
        Type: Git
        Value: "https://github.com/MyUser/MyLibrary.git"
    
    # Library Type (Static, Object, Shared, Header)
    LibraryType: Static
    
    # (Optional) Paths to be added to the include paths, relative to the dependency folder
    IncludePaths:
    -   "src/include"
    
    # (Optional if LibraryType is Header) Link properties of the dependency
    LinkProperties:
        # Properties for searching the library binary for the profile
        # You can also use "All" if all compilers use the same values
        "g++":
            # The library names to be searched for when linking against the script
            SearchLibraryNames: ["MyLibrary"]
            
            # (Optional) The library names to be excluded from being searched
            ExcludeLibraryNames: []
            
            # The path (relative to the dependency folder) to be searched for the dependency binaries
            SearchDirectories: ["./build"]
            
            # (Optional) Additional link options for this dependency for each platform
            AdditionalLinkOptions: 
                All: []
    
    # (Optional) Setup commands are run once when the dependency is populated
    Setup:
        # Target Platform
        All:
            # Setup shell commands for the specified profile. 
            # All commands are run in the dependency folder
            # You can also use "All" if all the compilers run the same setup commands
            "g++":
            -   "mkdir build"
            
    
    # (Optional) Build commands are run every time before the script is being built
    Build:
        # Target Platform
        All:
            "g++":
            -   "cd build && cmake .."
            -   "cd build && cmake --build ."
    
    # (Optional) Cleanup commands are run when the reset option is present. Normally nothing needs
    #            to be done since the dependency folder will be removed automatically.
    # Cleanup:
    #     Linux:
    #         "g++":
    #         -   "sudo apt purge MyLibrary"
