# yaml-language-server: $schema=./UserConfigSchema.json

---
# A default compiler profile to be used if not specified while running the build script
PreferredProfile: "g++"

# List of compiler/linker profiles that instruct how to compile/link
Profiles:
-   Name: "g++"
    
    # The file extensions associated with the profile
    FileExtensions: [cpp, cc, cxx]
    
    # The languages supported by the profile
    Languages: ["c++"]
    
    # (Optional) Steps to run before calling the compiler/linker. 
    #            This is run inside the .runcpp2 directory where the build happens.
    SetupSteps: 
        # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
        All: []
    
    # The file properties for the object files for each platform
    ObjectLinkFile:
        Prefix:
            Windows: ""
            Unix: ""
        Extension:
            Windows: ".obj"
            Unix: ".o"
    
    # The file properties for the files to be linked as shared libraries for each platform
    SharedLinkFile:
        Prefix:
            Windows: ""
            Linux: ".lib"
            MacOS: ""
        Extension:
            Windows: ".lib"
            Linux: ".so"
            MacOS: ".dylib"
    
    # The file properties for the files to be copied as shared libraries for each platform
    SharedLibraryFile:
        Prefix:
            Windows: ""
            Linux: ".lib"
            MacOS: ""
        Extension:
            Windows: ".dll"
            Linux: ".so"
            MacOS: ".dylib"
    
    # The file properties for the files to be linked as static libraries for each platform
    StaticLinkFile:
        Prefix:
            Unix: ".lib"
            Windows: ""
        Extension:
            Windows: ".lib"
            Unix: ".a"
    
    # (Optional) The file properties for debug symbols to be copied alongside the binary
    DebugSymbolFile:
        Prefix:
            Windows: ""
            Unix: ""
        Extension:
            Windows: ""
            Unix: ""
    
    # Specify the compiler settings, so the final flow will be:
    # [Setup steps if any] --> {Executable} {CompileArgs}
    Compiler:
        # (Optional) The command to run together before running each compile command
        EnvironmentSetup: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Executable to be called
        Executable: "g++"
        
        # Default arguments to provide for compilation which can be overridden by the script
        DefaultCompileFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: "-std=c++17 -Wall -Werror"
        
        # Flags for compiling to an executable
        ExecutableCompileFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Flags for compiling to a static library
        StaticLibCompileFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Flags for compiling to a shared library
        SharedLibCompileFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: "-fpic"
        
        # The syntax to compile the given file. 
        # [Setup steps if any] --> 
        # {Executable} {CompilePart} {IncludePart}...(for each dependency) {InputPart} {OutputPart}
        # {CompileFlags}, {IncludePath}, {InputFile}, {ObjectFile} will be replaced accordingly
        CompileArgs: 
            CompilePart: "-c {CompileFlags}"
            IncludePart: "-I{IncludePath}"
            InputPart: "{InputFile}"
            OutputPart: "-o {ObjectFile}"

    # Specify the linker settings, so the final flow will be:
    # [Setup steps if any] --> {Executable} {OutputPart} {DependenciesPart}...(for each dependency)
    Linker:
        # (Optional) The command to run together before running each link command
        EnvironmentSetup: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Executable to be called
        Executable: "g++"
        
        # Default arguments to provide for linking dependencies to the binary, 
        # which can be overridden by the script
        DefaultLinkFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Flags for linking as an executable
        ExecutableLinkFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Flags for linking as a static library
        StaticLibLinkFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: ""
        
        # Flags for linking as a shared library
        SharedLibLinkFlags: 
            # Applies to all platforms (Can be changed to Linux, MacOS, Windows, Unix, etc.)
            All: "-shared"
        
        # The syntax to link the given file
        LinkArgs:
            # Syntax for outputting to the binary. 
            # {LinkFlags}, {OutputFile}, {ObjectFile} will be replaced accordingly
            OutputPart: "{LinkFlags} -o {OutputFile} {ObjectFile}"
            
            # Syntax for linking each dependency. 
            # {LinkFile} will be replaced accordingly
            # LinkPart: "-l:{LinkFile}"
            LinkPart: "{LinkFile}"